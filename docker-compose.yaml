version: '3.8'

services:

  frontend:
    env_file:
      - .env
    build: frontend_react
    command: /bin/sh -c "${FRONTEND_CMD}"
    volumes:
      - frontend:/app/build
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - django

  nginx:
    image: nginx:alpine
    ports:
      - "3001:3000"
    volumes:
      - ./backend_django/static/:/usr/share/nginx/html/static/
      - ./backend_django/media/:/usr/share/nginx/html/media/
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - frontend:/usr/share/nginx/html/
    restart: always
    depends_on:
      - frontend
      - postgres
      - django

  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
        - postgres_data:/var/lib/postgresql/data
    healthcheck:
        test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
        interval: 10s
        timeout: 5s
        retries: 5
    ports:
        - "15432:5432"

  django:
    build: backend_django
    tty: false
    command: /bin/sh -c "python manage.py migrate; python manage.py runserver 0.0.0.0:8000"
    env_file:
      - .env
    volumes:
      - ./backend_django:/app
    ports:
      - "8000:8000"
    depends_on:
      - postgres

volumes:
  frontend:
  postgres_data:
